{"version":3,"sources":["services/auth.service.js","components/ResponsiveContainer.component.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/board-user.component.js","components/CardTeams.component.js","components/board-teams.component.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","username","password","axios","post","then","response","console","log","data","token","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","withStyles","createStyleSheet","props","classes","children","Grid","className","root","container","direction","justify","align","Login","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","value","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","item","xs","sm","noValidate","autoComplete","onSubmit","ref","c","TextField","id","type","label","name","onChange","required","Alert","alert","severity","Button","width","variant","color","style","display","Component","theme","margin","spacing","textAlign","boxSizing","role","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","validations","authHeader","user","get","headers","Home","content","UserService","getPublicContent","Profile","currentUser","getCurrentUser","BoardUser","getUserBoard","useStyles","makeStyles","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","CardTeams","Card","CardHeader","title","team","subheader","manager","CardMedia","image","CardContent","Typography","component","members","BoardTeams","handleTeams","onChangeName","getTeamsBoard","createTeams","text","map","index","key","createMuiTheme","palette","primary","main","secondary","App","logOut","showModeratorBoard","showAdminBoard","undefined","logout","AppBar","position","Toolbar","href","onClick","exact","path","flexGrow","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.5d5a3a4b.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"https://api-mpm.herokuapp.com/\";\n\nclass AuthService {\n    login(username, password) {\n        return axios\n            .post(API_URL + \"authenticate\", {\n                username,\n                password\n            })\n            .then(response => {\n                console.log(response.data);\n                if (response.data.token) {\n                    localStorage.setItem(\"user\", JSON.stringify(response.data));\n                }\n\n                return response.data;\n            });\n    }\n\n    logout() {\n        localStorage.removeItem(\"user\");\n    }\n\n    register(username, email, password) {\n        return axios.post(API_URL + \"register\", {\n            username,\n            email,\n            password\n        });\n    }\n\n    getCurrentUser() {\n        return JSON.parse(localStorage.getItem('user'));\n        ;\n    }\n}\n\nexport default new AuthService();\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nfunction createStyleSheet(param) {\n    return undefined;\n}\n\nconst styleSheet = createStyleSheet(theme => ({\n    root: {\n        [theme.breakpoints.up(\"sm\")]: {\n            \"min-height\": 500\n        }\n    }\n}));\n\nfunction ResponsiveContainerGrid(props) {\n    const classes = props.classes;\n    const { children } = props;\n    return (\n        <Grid\n            className={classes.root}\n            container\n            direction=\"row\"\n            justify=\"center\"\n            align=\"center\"\n        >\n            {children}\n        </Grid>\n    );\n}\n\nexport default withStyles(styleSheet)(ResponsiveContainerGrid);","import React, {Component} from \"react\";\nimport Form from \"react-validation/build/form\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from '@material-ui/lab/Alert';\nimport TextField from \"@material-ui/core/TextField\";\nimport {withStyles} from '@material-ui/core/styles';\nimport Grid from \"@material-ui/core/Grid\";\nimport ResponsiveContainerGrid from \"./ResponsiveContainer.component\";\n\n\nconst useStyles = (theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: \"100%\",\n            textAlign: 'center',\n        },\n    },\n    alert: {\n        boxSizing: 'border-box',\n    }\n});\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogin = this.handleLogin.bind(this);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            username: \"\",\n            password: \"\",\n            loading: false,\n            message: \"\"\n        };\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleLogin(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.login(this.state.username, this.state.password).then(\n                () => {\n                    this.props.history.push(\"/profile\");\n                    window.location.reload();\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        loading: false,\n                        message: resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n\n\n        return (\n\n            <ResponsiveContainerGrid>\n                <Grid item xs={12} sm={6}>\n\n                    <Form\n                        className={classes.root}\n                        noValidate\n                        autoComplete=\"off\"\n                        onSubmit={this.handleLogin}\n                        ref={c => {\n                            this.form = c;\n                        }}\n                    >\n\n                        <TextField\n                            id=\"standard-basic\"\n                            type=\"text\"\n                            label=\"Username\"\n                            name=\"username\"\n                            value={this.state.username}\n                            onChange={this.onChangeUsername}\n                            required={true}\n                        />\n\n                        <TextField\n                            id=\"standard-basic\"\n                            label=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            value={this.state.password}\n                            onChange={this.onChangePassword}\n                            required={true}\n                        />\n\n\n                        {this.state.message && (\n                            <Alert className={classes.alert} severity=\"error\">{this.state.message}</Alert>\n                        )}\n\n                        <Button\n                            width=\"auto\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                        > Login </Button>\n\n                        <CheckButton\n                            style={{display: \"none\"}}\n                            ref={c => {\n                                this.checkBtn = c;\n                            }}\n                        />\n                    </Form>\n                </Grid>\n            </ResponsiveContainerGrid>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(Login);\n","import React, {Component} from \"react\";\nimport Form from \"react-validation/build/form\";\nimport CheckButton from \"react-validation/build/button\";\n/* import {isEmail} from \"validator\"; */\n\nimport AuthService from \"../services/auth.service\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {withStyles} from '@material-ui/core/styles';\nimport Alert from \"@material-ui/lab/Alert\";\nimport ResponsiveContainerGrid from \"./ResponsiveContainer.component\";\n\nconst useStyles = (theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: \"100%\",\n            textAlign: 'center',\n        },\n    },\n    alert: {\n        boxSizing: 'border-box',\n    }\n});\n\nconst required = value => {\n    if (!value) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This field is required!\n            </div>\n        );\n    }\n};\n\n/* const email = value => {\n    if (!isEmail(value)) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                This is not a valid email.\n            </div>\n        );\n    }\n}; */\n\nconst vusername = value => {\n    if (value.length < 3 || value.length > 20) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The username must be between 3 and 20 characters.\n            </div>\n        );\n    }\n};\n\nconst vpassword = value => {\n    if (value.length < 6 || value.length > 40) {\n        return (\n            <div className=\"alert alert-danger\" role=\"alert\">\n                The password must be between 6 and 40 characters.\n            </div>\n        );\n    }\n};\n\nclass Register extends Component {\n    constructor(props) {\n        super(props);\n        this.handleRegister = this.handleRegister.bind(this);\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n\n        this.state = {\n            username: \"\",\n            email: \"\",\n            password: \"\",\n            successful: false,\n            message: \"\"\n        };\n    }\n\n    onChangeUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            email: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            password: e.target.value\n        });\n    }\n\n    handleRegister(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            successful: false\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            AuthService.register(\n                this.state.username,\n                this.state.email,\n                this.state.password\n            ).then(\n                response => {\n                    this.setState({\n                        message: response.data.message,\n                        successful: true\n                    });\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        successful: false,\n                        message: resMessage\n                    });\n                }\n            );\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <ResponsiveContainerGrid>\n                <Grid item xs={12} sm={6}>\n\n                <Form\n                    className={classes.root}\n                    noValidate\n                    autoComplete=\"off\"\n                    onSubmit={this.handleRegister}\n                    ref={c => {\n                        this.form = c;\n                    }}\n                >\n                    {!this.state.successful && (\n                        <>\n                            <TextField\n                                id=\"standard-basic\"\n                                type=\"text\"\n                                label=\"Username\"\n                                name=\"username\"\n                                value={this.state.username}\n                                onChange={this.onChangeUsername}\n                                validations={[vusername]}\n                                required={true}\n                            />\n                            <TextField\n                                id=\"standard-basic\"\n                                label=\"Email\"\n                                type=\"text\"\n                                name=\"email\"\n                                value={this.state.email}\n                                onChange={this.onChangeEmail}\n                                required={true}\n                            />\n                            <TextField\n                                id=\"standard-basic\"\n                                type=\"password\"\n                                label=\"Password\"\n                                name=\"password\"\n                                value={this.state.password}\n                                onChange={this.onChangePassword}\n                                validations={[required, vpassword]}\n                                required={true}\n                            />\n\n                            {this.state.message && (\n                                <Alert\n                                    className={classes.alert}\n                                    severity={\n                                        this.state.successful\n                                            ? \"success\"\n                                            : \"error\"\n                                    }\n                                >{this.state.message}</Alert>\n                            )}\n\n                            <Button\n                                width=\"auto\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\">Sign Up</Button>\n                        </>\n                    )}\n\n                    <CheckButton\n                        style={{display: \"none\"}}\n                        ref={c => {\n                            this.checkBtn = c;\n                        }}\n                    />\n                </Form>\n            </Grid>\n            </ResponsiveContainerGrid>\n        );\n    }\n}\n\n\nexport default withStyles(useStyles)(Register)","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.token) {\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    return { 'Authorization': 'Bearer '+ user.token };       // for Node.js Express back-end\n  } else {\n    return {};\n  }\n}\n","import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'https://api-mpm.herokuapp.com/';\n\nclass UserService {\n    getPublicContent() {\n        return axios.get(API_URL + 'all');\n    }\n\n    getUserBoard() {\n        return axios.get(API_URL + 'user', {headers: authHeader()});\n    }\n\n    getTeamsBoard() {\n        return axios.get(API_URL + 'api/Teams', {headers: authHeader()});\n    }\n\n    createTeams(data) {\n        return axios.post(API_URL + 'api/Teams', {name: data}, {\n                headers: authHeader(),\n            }\n        )\n            ;\n    }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport AuthService from \"../services/auth.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser()\n    };\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong>{\" \"}\n          {currentUser.email}\n        </p>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport red from \"@material-ui/core/colors/red\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 345,\n        margin: '8px',\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\n\nexport default function CardTeams(props) {\n    const classes = useStyles();\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                title={props.team.name}\n                subheader={props.team.manager.username}\n            />\n            <CardMedia\n                className={classes.media}\n                image=\"/static/images/cards/paella.jpg\"\n                title={props.team.name}\n            />\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {\n                        props.team.members.length === 0 ? \"There is no member...\" : props.team.members\n                    }\n                </Typography>\n            </CardContent>\n        </Card>\n    )\n}","import React, {Component} from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Form from \"react-validation/build/form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Button from \"@material-ui/core/Button\";\nimport CheckButton from \"react-validation/build/button\";\nimport ResponsiveContainerGrid from \"./ResponsiveContainer.component\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport CardTeams from \"./CardTeams.component\";\nimport {Typography} from \"@material-ui/core\";\n\n\nconst useStyles = (theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: \"100%\",\n        },\n    },\n    alert: {\n        boxSizing: 'border-box',\n    },\n\n    text: {\n        textAlign: 'center',\n    }\n});\n\n\nclass BoardTeams extends Component {\n    constructor(props) {\n        super(props);\n        this.handleTeams = this.handleTeams.bind(this);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.state = {\n            content: \"\",\n            name: \"\"\n        };\n    }\n\n    componentDidMount() {\n        UserService.getTeamsBoard().then(\n            response => {\n                this.setState({\n                    content: response.data\n                });\n            },\n            error => {\n                this.setState({\n                    content:\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString()\n                });\n            }\n        );\n    }\n\n    onChangeName(e) {\n        this.setState({\n            name: e.target.value\n        });\n    }\n\n    handleTeams(e) {\n        e.preventDefault();\n\n        this.setState({\n            message: \"\",\n            loading: true\n        });\n\n        this.form.validateAll();\n\n        if (this.checkBtn.context._errors.length === 0) {\n            UserService.createTeams(this.state.name).then(\n                () => {\n                    this.props.history.push(\"/teams\");\n                    window.location.reload();\n                },\n                error => {\n                    const resMessage =\n                        (error.response &&\n                            error.response.data &&\n                            error.response.data.message) ||\n                        error.message ||\n                        error.toString();\n\n                    this.setState({\n                        loading: false,\n                        message: resMessage\n                    });\n                }\n            );\n        } else {\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const {classes} = this.props;\n        return (\n            <>\n\n                <Typography variant='h6' className={classes.text}>\n                    Your teams list:\n                </Typography>\n                <ResponsiveContainerGrid>\n                {\n                    this.state.content && this.state.content.map((team, index) => {\n                        return (\n                            <CardTeams key={index} team={team}/>\n                        )\n                    })\n                }\n\n                    <Grid item xs={12} sm={6}>\n\n                        <Form\n                            className={classes.root}\n                            noValidate\n                            autoComplete=\"off\"\n                            onSubmit={this.handleTeams}\n                            ref={c => {\n                                this.form = c;\n                            }}\n                        >\n\n                            <TextField\n                                id=\"standard-basic\"\n                                type=\"text\"\n                                label=\"Team's name\"\n                                name=\"name\"\n                                value={this.state.name}\n                                onChange={this.onChangeName}\n                            />\n\n                            {this.state.message && (\n                                <Alert className={classes.alert} severity=\"error\">{this.state.message}</Alert>\n                            )}\n\n                            <Button\n                                width=\"auto\"\n                                type=\"submit\"\n                                variant=\"contained\"\n                                color=\"primary\"\n                            > Create </Button>\n\n                            <CheckButton\n                                style={{display: \"none\"}}\n                                ref={c => {\n                                    this.checkBtn = c;\n                                }}\n                            />\n                        </Form>\n                    </Grid>\n                </ResponsiveContainerGrid>\n            </>\n        );\n    }\n}\n\n\nexport default withStyles(useStyles)(BoardTeams);","import React, {Component} from \"react\";\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nimport \"./App.css\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport {withStyles} from '@material-ui/styles';\nimport BoardTeams from \"./components/board-teams.component\";\n\nconst useStyles = (theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    title: {\n        flexGrow: 1,\n    },\n});\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary:{\n            main: '#4a8fd4'\n        },\n        secondary: {\n            main: '#2f5daa'\n        }\n    }\n});\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.logOut = this.logOut.bind(this);\n        this.state = {\n            showModeratorBoard: false,\n            showAdminBoard: false,\n            currentUser: undefined,\n        };\n    }\n\n    componentDidMount() {\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            this.setState({\n                currentUser: AuthService.getCurrentUser(),\n            });\n        }\n    }\n\n    logOut() {\n        AuthService.logout();\n    }\n\n    render() {\n        const {classes} = this.props;\n        const {currentUser} = this.state;\n        return (\n            <Router>\n                <MuiThemeProvider theme={theme}>\n                    <AppBar position=\"static\">\n                        <Toolbar>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                MPM\n                            </Typography>\n\n                            {currentUser ? (\n                                <>\n                                <Button href={\"/teams\"} color=\"inherit\">Teams</Button>\n                                <Button href={\"/profile\"} color=\"inherit\">{currentUser.username}</Button>\n                                <Button href={\"/login\"} onClick={this.logOut}  color=\"inherit\">LogOut</Button>\n                                </>\n                            ) : (\n                                <>\n                                    <Button href={\"/login\"} color=\"inherit\">Login</Button>\n                                    <Button href={\"/register\"} color=\"inherit\">Sign Up</Button>\n                                </>\n                            )}\n\n\n                        </Toolbar>\n                    </AppBar>\n\n                    <div className=\"container mt-3\">\n                        <Switch>\n                            <Route exact path={[\"/\", \"/home\"]} component={Home}/>\n                            <Route exact path=\"/login\" component={Login}/>\n                            <Route exact path=\"/register\" component={Register}/>\n                            <Route exact path=\"/profile\" component={Profile}/>\n                            <Route path=\"/user\" component={BoardUser}/>\n                            <Route path=\"/teams\" component={BoardTeams}/>\n                        </Switch>\n                    </div>\n                </MuiThemeProvider>\n            </Router>\n        );\n    }\n}\n\nexport default withStyles(useStyles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}